{"version":3,"sources":["components/DayOfTheWeek.js","components/Header.js","App.js","index.js"],"names":["DayOfTheWeek","props","day","Header","Navbar","bg","Brand","App","state","plantList","date","Date","handleNewDate","setState","handleYesterdayDate","setDate","getDate","handleTomorrowDate","this","data","renderPlants","map","plant","i","startDate","today","getDay","parseInt","water_after","ListGroup","Item","name","class","selected","onChange","Button","variant","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"2NAEaA,G,MAAe,SAACC,GAC3B,OAAOA,EAAMC,KACX,KAAK,EACH,OACE,6BACE,uCAGN,KAAK,EACH,OACE,6BACE,uDAGN,KAAK,EACH,OACE,6BACE,wDAGN,KAAK,EACH,OACE,6BACE,0DAGN,KAAK,EACH,OACE,6BACE,yDAGN,KAAK,EACH,OACE,6BACE,uDAGN,KAAK,EACH,OACE,6BACE,yCAGN,QACE,OAAOD,K,SC3CAE,EAAS,kBACpB,kBAACC,EAAA,EAAD,CAAQC,GAAG,SACT,kBAACD,EAAA,EAAOE,MAAR,4B,wCCkFWC,E,2MA3EbC,MAAQ,CACNC,UAAW,GACXC,KAAM,IAAIC,M,EAGZC,cAAgB,SAACF,GACf,EAAKG,SAAS,CACZH,KAAMA,K,EAIVI,oBAAsB,SAACJ,IACrBA,EAAO,EAAKF,MAAME,MACbK,QAAQL,EAAKM,UAAW,GAC7B,EAAKH,SAAS,CACZH,KAAMA,K,EAIVO,mBAAqB,SAACP,IACpBA,EAAO,EAAKF,MAAME,MACbK,QAAQL,EAAKM,UAAY,GAC9B,EAAKH,SAAS,CACZH,KAAMA,K,mFAKRQ,KAAKL,SAAS,CACZJ,UAAWU,M,+BAIL,IAAD,EACqBD,KAAKV,MAAzBC,EADD,EACCA,UAAWC,EADZ,EACYA,KACbU,EAAeX,EAAUY,KAAI,SAACC,EAAOC,GACzC,IAAMC,EAAY,IAAIb,KAAK,8BACrBc,EAASf,EAAKM,UAAYQ,EAAUR,UAE1C,OAAsB,IAAlBN,EAAKgB,UAAoC,IAAlBhB,EAAKgB,SACvB,KACIhB,EAAKgB,SAAW,IAAM,GAAOhB,EAAKgB,SAAU,IAAM,GAAQD,EAAQE,SAASL,EAAMM,eAAiB,EAE3G,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,KAAX,KAAiBR,EAAMS,OAIpB,QAGT,OACE,yBAAKC,MAAM,YACT,kBAAC,EAAD,MACA,yBAAKA,MAAM,YACT,kBAAC,IAAD,CACEC,SAAWf,KAAKV,MAAME,KACtBwB,SAAWhB,KAAKN,gBAElB,yBAAKoB,MAAM,gBACT,qFACA,iFAEF,yBAAKA,MAAM,eACT,kBAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAUnB,KAAKJ,qBAA3C,aACA,kBAACqB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAUnB,KAAKD,oBAA3C,cAGF,kBAAC,EAAD,CAAcf,IAAMQ,EAAKgB,WACxBN,O,GAtEKkB,aCPlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1306d8e9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const DayOfTheWeek = (props) => {\n  switch(props.day) {\n    case 0:\n      return (\n        <div>\n          <h2>Sunday</h2>\n        </div>\n      )\n    case 1:\n      return (\n        <div>\n          <h2>Monday Plants to Water</h2>\n        </div>\n      )\n    case 2:\n      return (\n        <div>\n          <h2>Tuesday Plants to Water</h2>\n        </div>\n      )\n    case 3:\n      return (\n        <div>\n          <h2>Wednesday Plants to Water</h2>\n        </div>\n      )\n    case 4:\n      return (\n        <div>\n          <h2>Thursday Plants to Water</h2>\n        </div>\n      )\n    case 5:\n      return (\n        <div>\n          <h2>Friday Plants to Water</h2>\n        </div>\n      )\n    case 6:\n      return (\n        <div>\n          <h2>Saturday</h2>\n        </div>\n      )\n    default:\n      return props;\n  }\n}","import React from 'react';\n\nimport { Navbar } from 'react-bootstrap';\n\nexport const Header = () => (\n  <Navbar bg=\"light\">\n    <Navbar.Brand>Water Your Plants</Navbar.Brand>\n  </Navbar>\n)","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { DayOfTheWeek } from './components/DayOfTheWeek';\nimport { Header } from './components/Header';\nimport * as data from './plants.json';\n\nimport './scss/custom.scss';\nimport './scss/App.scss';\n\nimport {ListGroup, Button} from 'react-bootstrap/';\n\nclass App extends Component {\n  state = {\n    plantList: [],\n    date: new Date()\n  };\n\n  handleNewDate = (date) => {\n    this.setState({\n      date: date\n    });\n  };\n\n  handleYesterdayDate = (date) => {\n    date = this.state.date;\n    date.setDate(date.getDate() -1);\n    this.setState({\n      date: date\n    });\n  };\n\n  handleTomorrowDate = (date) => {\n    date = this.state.date;\n    date.setDate(date.getDate() + 1);\n    this.setState({\n      date: date\n    });\n  };\n  \n  componentDidMount() {\n    this.setState({\n      plantList: data.default\n    });\n  };\n\n  render() {\n    const { plantList, date } = this.state;\n    const renderPlants = plantList.map((plant, i) => {\n      const startDate = new Date('December 16, 2019 00:00:00');\n      const today = (date.getDate() % startDate.getDate());\n\n      if (date.getDay() === 0 || date.getDay() === 6) {\n        return null;\n      } else if (((date.getDay() - 1 === 0) || (date.getDay() +1 === 6)) || (today % parseInt(plant.water_after) === 0)) {\n        return (\n          <ListGroup>\n            <ListGroup.Item>{plant.name}</ListGroup.Item>\n          </ListGroup>\n          )\n        }\n        return null;\n      })\n      \n      return (\n        <div class=\"main-app\">\n          <Header />\n          <div class=\"date-nav\">\n            <DatePicker\n              selected={ this.state.date }\n              onChange={ this.handleNewDate }\n            />\n            <div class=\"instructions\">\n              <p>Click on the date above to select a date in the future</p>\n              <p>Or use the buttons below to move between the days</p>\n            </div>\n            <div class=\"nav-buttons\">\n              <Button variant=\"secondary\" onClick={ this.handleYesterdayDate }>Yesterday</Button>\n              <Button variant=\"secondary\" onClick={ this.handleTomorrowDate }>Tomorrow</Button>\n            </div>\n          </div>\n            <DayOfTheWeek day={ date.getDay() }/>\n            {renderPlants}\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}